{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/solomon/Desktop/projects/user-management/frontend-user-management/src/lib/utils/axios.instance.ts"],"sourcesContent":["import axios from \"axios\"\n\n\n// console.log(\"API:\", process.env.NEXT_PUBLIC_API_URL)\nconst API = axios.create({\n    baseURL: \"http://localhost:4000\",\n    // cookes are sent with requests if needed\n    // withCredentials: true,\n});\n\nAPI.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response) {\n            // console.error(\"error from backend:\", error.response.data);\n            return Promise.reject(error.response.data);\n        }\n        console.error(\"network error:\", error.message);\n        return Promise.reject({ message: \"Network error, plaese try again later\" });\n    }\n);\n\nexport default API;"],"names":[],"mappings":";;;AAAA;;AAGA,uDAAuD;AACvD,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,SAAS;AAGb;AAEA,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC,WAAa,UACd,CAAC;IACG,IAAI,MAAM,QAAQ,EAAE;QAChB,6DAA6D;QAC7D,OAAO,QAAQ,MAAM,CAAC,MAAM,QAAQ,CAAC,IAAI;IAC7C;IACA,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;IAC7C,OAAO,QAAQ,MAAM,CAAC;QAAE,SAAS;IAAwC;AAC7E;uCAGW","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///home/solomon/Desktop/projects/user-management/frontend-user-management/src/lib/utils/hooks/user.queries.hooks.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport API from \"../axios.instance\";\nimport { User } from \"@/types/user.types\";\n\n\n\n// fetch all users\nexport const useGetAllUsers = () =>\n    useQuery({\n        queryKey: [\"users\"],\n        queryFn: async () => {\n            const res = await API.get<User[]>(\"/user/users\");\n            return res.data\n        }\n    })\n\n\n// fetch a single user by ID\nexport const useGetUser = (id: string) =>\n    useQuery({\n        queryKey: ['user', id],\n        queryFn: async () => {\n            const res = await API.get<User>(`/user/get/${id}`)\n            return res.data\n        },\n        // only run if id exists\n        enabled: !!id\n    })"],"names":[],"mappings":";;;;AAAA;AACA;;;AAMO,MAAM,iBAAiB,IAC1B,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QACL,UAAU;YAAC;SAAQ;QACnB,SAAS;YACL,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAG,CAAC,GAAG,CAAS;YAClC,OAAO,IAAI,IAAI;QACnB;IACJ;AAIG,MAAM,aAAa,CAAC,KACvB,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QACL,UAAU;YAAC;YAAQ;SAAG;QACtB,SAAS;YACL,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAG,CAAC,GAAG,CAAO,CAAC,UAAU,EAAE,IAAI;YACjD,OAAO,IAAI,IAAI;QACnB;QACA,wBAAwB;QACxB,SAAS,CAAC,CAAC;IACf","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/solomon/Desktop/projects/user-management/frontend-user-management/src/store/user.store.ts"],"sourcesContent":["import { User } from \"@/types/user.types\";\nimport { create } from \"zustand\";\n\ninterface UserStore {\n    user: Partial<User> | null\n    setUser: (user: Partial<User>) => void\n    resetUser: () => void\n}\n\nexport const useUserStore = create<UserStore>((set) => ({\n    user: null,\n    setUser: (user) => set({ user }),\n    resetUser: () => set({ user: null })\n}));\n"],"names":[],"mappings":";;;AACA;;AAQO,MAAM,eAAe,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QACpD,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,WAAW,IAAM,IAAI;gBAAE,MAAM;YAAK;IACtC,CAAC","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///home/solomon/Desktop/projects/user-management/frontend-user-management/src/lib/utils/hooks/user.mutations.hooks.ts"],"sourcesContent":["import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport API from \"../axios.instance\";\nimport { User } from \"@/types/user.types\";\nimport { useUserStore } from \"@/store/user.store\";\n\n\n\n// sign up hook \nexport const useCreateUser = () => {\n    const queryClient = useQueryClient();\n    const { resetUser } = useUserStore();\n\n    return useMutation({\n        mutationFn: async (credential: FormData) => {\n            const res = await API.post(\"/user/signup\", credential, {\n                headers: { \"Content-Type\": \"multipart/form-data\" },\n            });\n            return res.data;\n        },\n        // on success refresh tanstack query cache and reset user store\n        onSuccess: (data) => {\n            queryClient.invalidateQueries({ queryKey: [\"users\"] });\n            resetUser();\n        },\n        onError: (error) => {\n            console.log(\"Sign up failed:\", error);\n        },\n    });\n};\n\n\n// update user hook\nexport const useUpdateUser = () => {\n    const queryClient = useQueryClient();\n    // reset user store after api calls\n    const { resetUser } = useUserStore()\n    return useMutation({\n        mutationFn: async ({ id, user }: { id: string; user: User }) => {\n            const res = await API.patch(`/user/update/${id}`, user);\n            return res.data;\n        },\n        // on success refresh tanstack query cache and reset user store\n        onSuccess: (data) => {\n            queryClient.invalidateQueries({ queryKey: [\"users\"] });\n            resetUser()\n        },\n        onError: (error) => {\n            console.log(\"update failed:\", error);\n        }\n    })\n}\n\n\n// delete user hook\nexport const useDeleteUser = () => {\n    const queryClient = useQueryClient();\n    // reset user store after api calls\n    const { resetUser } = useUserStore()\n    return useMutation({\n        mutationFn: async (id: string) => {\n            const res = await API.delete(`/user/delete/${id}`);\n        },\n        // on success refresh tanstack query cache and reset user store\n        onSuccess: (data) => {\n            queryClient.invalidateQueries({ queryKey: [\"users\"] });\n            resetUser()\n        },\n        onError: (error) => {\n            console.log(\"sign up failed:\", error);\n        }\n    })\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAEA;;;;AAKO,MAAM,gBAAgB;IACzB,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IACjC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;IAEjC,OAAO,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACf,YAAY,OAAO;YACf,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,gBAAgB,YAAY;gBACnD,SAAS;oBAAE,gBAAgB;gBAAsB;YACrD;YACA,OAAO,IAAI,IAAI;QACnB;QACA,+DAA+D;QAC/D,WAAW,CAAC;YACR,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;YACpD;QACJ;QACA,SAAS,CAAC;YACN,QAAQ,GAAG,CAAC,mBAAmB;QACnC;IACJ;AACJ;AAIO,MAAM,gBAAgB;IACzB,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IACjC,mCAAmC;IACnC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;IACjC,OAAO,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACf,YAAY,OAAO,EAAE,EAAE,EAAE,IAAI,EAA8B;YACvD,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAG,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,IAAI,EAAE;YAClD,OAAO,IAAI,IAAI;QACnB;QACA,+DAA+D;QAC/D,WAAW,CAAC;YACR,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;YACpD;QACJ;QACA,SAAS,CAAC;YACN,QAAQ,GAAG,CAAC,kBAAkB;QAClC;IACJ;AACJ;AAIO,MAAM,gBAAgB;IACzB,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IACjC,mCAAmC;IACnC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;IACjC,OAAO,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACf,YAAY,OAAO;YACf,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,IAAI;QACrD;QACA,+DAA+D;QAC/D,WAAW,CAAC;YACR,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;YACpD;QACJ;QACA,SAAS,CAAC;YACN,QAAQ,GAAG,CAAC,mBAAmB;QACnC;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///home/solomon/Desktop/projects/user-management/frontend-user-management/src/components/forms/UpdateUserForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useUpdateUser } from \"@/lib/utils/hooks/user.mutations.hooks\";\nimport { useGetUser } from \"@/lib/utils/hooks/user.queries.hooks\";\nimport { User } from \"@/types/user.types\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\ninterface UpdateUserFormProps {\n  userId: string;\n  //   close modal form\n  onClose: () => void;\n}\n\nexport default function UpdateUserForm({\n  userId,\n  onClose,\n}: UpdateUserFormProps) {\n  const { data: user, isLoading, isError } = useGetUser(userId);\n  const updateUserMutation = useUpdateUser();\n  const { register, handleSubmit, reset, watch, setValue, getValues } =\n    useForm<User>({\n      defaultValues: {\n        userAcademics: { pastSchools: [\"\"] },\n      },\n    });\n\n  const pastSchools = watch(\"userAcademics.pastSchools\");\n  const addSchool = () => {\n    setValue(\"userAcademics.pastSchools\", [\n      ...getValues(\"userAcademics.pastSchools\"),\n      \"\",\n    ]);\n  };\n\n  //remove school\n  const rmSchool = (id: number) => {\n    const updatedSchools = getValues(\"userAcademics.pastSchools\").filter(\n      (_, i) => i !== id\n    );\n    setValue(\"userAcademics.pastSchools\", updatedSchools);\n  };\n\n  //   update form values when user data loads\n  useEffect(() => {\n    if (user) reset(user);\n  }, [user, reset]);\n\n  const onSubmit = (data: any) => {\n    updateUserMutation.mutate(\n      { id: userId, user: data },\n      {\n        onSuccess: () => {\n          alert(\"updated\");\n          onClose();\n        },\n      }\n    );\n  };\n  if (isLoading) return <p>loading user.....</p>;\n  return (\n    <div>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"flex flex-col bg-white p-8 rounded-md gap-[15px]\"\n      >\n        <div className=\"flex gap-[30px]\">\n          {/* user info step of the form  */}\n          <div>\n            <h2 className=\"text-xl font-bold\">User Info</h2>\n            <div>\n              <label>First Name</label>\n              <input {...register(\"userInfo.firstName\", { required: true })} />\n            </div>\n\n            <div>\n              <label>Last Name</label>\n              <input {...register(\"userInfo.lastName\", { required: true })} />\n            </div>\n            <div>\n              <label>Date of birth</label>\n              <input\n                {...register(\"userInfo.dob\", { required: true })}\n                type=\"date\"\n              />\n            </div>\n            <div>\n              <label>Occupation</label>\n              <input {...register(\"userInfo.occupation\", { required: true })} />\n            </div>\n            <div>\n              <label>Gender</label>\n              <select {...register(\"userInfo.gender\", { required: true })}>\n                <option value=\"\">Select Gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n              </select>\n            </div>\n          </div>\n\n          {/* user contact step of the form  */}\n          <div>\n            <h2 className=\"text-xl font-bold\">User Contact</h2>\n            <div>\n              <label>Email</label>\n              <input\n                {...register(\"userContact.email\", { required: true })}\n                type=\"email\"\n              />\n            </div>\n            <div>\n              <label>Phone</label>\n              <input\n                {...register(\"userContact.phoneNumber\", { required: true })}\n                type=\"tel\"\n              />\n            </div>\n            <div>\n              <label>Fax</label>\n              <input {...register(\"userContact.fax\")} />\n            </div>\n            <div>\n              <label>LinkedIn URL</label>\n              <input {...register(\"userContact.linkedinUrl\")} />\n            </div>\n          </div>\n          {/* user address step of the form  */}\n          <div>\n            <h2 className=\"text-xl font-bold\">User Info</h2>\n            <div>\n              <label>Address</label>\n              <input {...register(\"userAddress.address\", { required: true })} />\n            </div>\n            <div>\n              <label>City</label>\n              <input {...register(\"userAddress.city\", { required: true })} />\n            </div>\n            <div>\n              <label>State</label>\n              <input {...register(\"userAddress.state\", { required: true })} />\n            </div>\n            <div>\n              <label>Zip Code</label>\n              <input {...register(\"userAddress.zipCode\", { required: true })} />\n            </div>\n            <div>\n              <label>Country</label>\n              <input {...register(\"userAddress.country\", { required: true })} />\n            </div>\n          </div>\n          {/* user academics step of the form  */}\n          <div>\n            <label>Past Schools</label>\n            {pastSchools?.map((_, index) => (\n              <div key={index} className=\" flex-col flex \">\n                <input {...register(`userAcademics.pastSchools.${index}`)} />\n                <button\n                  type=\"button\"\n                  onClick={() => rmSchool(index)}\n                  className=\"cursor-pointer\"\n                >\n                  Remove\n                </button>\n              </div>\n            ))}\n            <button\n              type=\"button\"\n              onClick={addSchool}\n              className=\"cursor-pointer\"\n            >\n              Add School\n            </button>\n          </div>\n        </div>\n        <div className=\"flex justify-between mt-4\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"px-4 py-2 bg-blue-400 text-white rounded-md cursor-pointer\"\n          >\n            Cancel\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-md cursor-pointer\"\n          >\n            {updateUserMutation.isPending ? \"updating...\" : \"Update\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}